# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = user
quarkus.datasource.password = pass
quarkus.datasource.jdbc.url = jdbc:postgresql://${DB_URL:192.168.0.103:5433}/db
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update


quarkus.http.cors=true
#quarkus.http.cors.origins=http://192.168.0.103:8081
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.port=8080
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.cors.exposed-methods=Content-Disposition

# Config OIDC (keycloak)
#quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/myrealm
quarkus.oidc.auth-server-url=${KEYCLOAK_URL:http://192.168.0.103:8180}/auth/realms/myrealm
quarkus.oidc.client-id=app-auth
quarkus.oidc.enabled=true
#quarkus.oidc.token.issuer=http://localhost:8180/auth/realms/myrealm
#quarkus.oidc.token.issuer=${KEYCLOAK_URL:http://192.168.0.103:8180}/auth/realms/myrealm
quarkus.oidc.token.issuer=any
#quarkus.keycloak.devservices.realm-path=myrealm.json

#Config Logging 
quarkus.log.handler.gelf.enabled=true
#quarkus.log.handler.gelf.host=localhost
quarkus.log.handler.gelf.host=${LOG_URL:192.168.0.103}
quarkus.log.handler.gelf.port=${LOG_PORT:12201}

#quarkus.log.syslog.enable=true
#quarkus.log.syslog.endpoint=${LOGSTASH_URL:localhost:12202}
#quarkus.log.syslog.protocol=udp
#quarkus.log.syslog.app-name=main-service
#quarkus.log.syslog.hostname=main-service-host


quarkus.application.name=main-service
quarkus.http.port=${APP_PORT:8387}
quarkus.container-image.builder=docker

#quarkus.log.console.enable=true

consul.url = ${CONSUL_URL:http://192.168.0.103:8500}
app.host_url = ${HOST_URL:192.168.0.103}
quarkus.consul-config.properties-value-keys=config/${quarkus.application.name}
#quarkus.consul-config.enabled=true
